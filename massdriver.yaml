schema: draft-07
name: "azure-cosmosdb-mongo"
description: "Azure Cosmos MongoDB is a fully managed, serverless NoSQL database for high-performance applications of any size or scale using the MongoDB API."
source_url: github.com/massdriver-cloud/azure-cosmosdb-mongo
access: "private"
type: "bundle"

MonitorAlarmMetric: &monitor_alarm_metric
  required:
    - severity
    - frequency
    - window_size
    - aggregation
    - operator
    - threshold
  properties:
    severity:
      title: Severity
      description: The severity of the alarm.
      type: integer
      default: 1
      oneOf:
        - title: Critical
          const: 0
        - title: Error
          const: 1
        - title: Warning
          const: 2
        - title: Information
          const: 3
        - title: Verbose
          const: 4
    frequency:
      title: Frequency
      description: The evaluation frequency of the alarms.
      type: string
      default: PT1M
      oneOf:
        - title: Every 1 minute
          const: PT1M
        - title: Every 5 minutes
          const: PT5M
        - title: Every 15 minutes
          const: PT15M
        - title: Every 30 minutes
          const: PT30M
        - title: Every 1 hour
          const: PT1H
    window_size:
      title: Alarm window
      description: The time range over which the alarm is evaluated.
      type: string
      default: PT5M
      oneOf:
        - title: Every 1 minute
          const: PT1M
        - title: Every 5 minutes
          const: PT5M
        - title: Every 15 minutes
          const: PT15M
        - title: Every 30 minutes
          const: PT30M
        - title: Every 1 hour
          const: PT1H
        - title: Every 6 hours
          const: PT6H
        - title: Every 12 hours
          const: PT12H
        - title: Every 24 hours
          const: PT1D
    aggregation:
      title: Aggregation
      description: The aggregation type of the alarm.
      type: string
      default: Average
      enum:
        - Average
        - Count
        - Minimum
        - Maximum
        - Total
    operator:
      title: Operator
      description: The operator used to compare the metric value to the threshold.
      type: string
      default: GreaterThanOrEqual
      oneOf:
        - title: Greater than or equal to
          const: GreaterThanOrEqual
        - title: Greater than
          const: GreaterThan
        - title: Less than or equal to
          const: LessThanOrEqual
        - title: Less than
          const: LessThan
        - title: Equals
          const: Equals
        - title: Not equal to
          const: NotEquals
    threshold:
      title: Threshold
      description: The percentage threshold for the metric to trigger an alarm. For RU consumption, the threshold is the percentage of the current RU consumption. For server latency, the threshold is latency in milliseconds.
      type: integer
      minimum: 0

params:
  examples:
  - __name: Development
    database:
      total_throughput_limit: 100000
      serverless: true
    backups:
      backup_type: None
  - __name: Production
    database:
      total_throughput_limit: -1
      serverless: false
    geo_redundancy:
      automatic_failover: true
    backups:
      backup_type: Continuous
  required:
    - database
    - geo_redundancy
    - backups
    - monitoring
  properties:
    database:
      type: object
      title: Database
      required:
        - mongo_server_version
        - consistency_level
        - total_throughput_limit
        - cidr
      properties:
        mongo_server_version:
          title: Version
          description: The server version of the MongoDB account.
          type: string
          default: "4.2"
          enum:
            - "4.2"
            - "4.0"
            - "3.6"
        cidr:
          title: Subnet CIDR
          type: string
          description: Specify a /28 CIDR range within your VNet to create subnet for the Cosmos DB. The subnet CIDR cannot be changed after creation.
          $md.immutable: true
          pattern: ^(?:10\.(?:[0-9]|[0-9]{2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|172\.(?:1[6-9]|2[0-9]|3[0-1])|192\.168)(?:\.(?:[0-9]|[0-9]{2}|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){2}\/28$
          message:
            pattern: "Must be a /28 range from within the VNet CIDR"
        consistency_level:
          title: Consistency level
          description: The consistency level to use for this CosmosDB Account.
          type: string
          oneOf:
            - title: Strong (highest consistency, highest latency, lower throughput)
              const: Strong
            - title: Bounded Staleness (consistency, latency, and throughput varies)
              const: BoundedStaleness
            - title: Eventual (lowest consistency, lowest latency, high throughput)
              const: Eventual
        total_throughput_limit:
          title: Total throughput limit
          description: The total throughput limit imposed on this Cosmos DB account in RU/s (-1 means no limit).
          type: integer
          minimum: -1
          maximum: 10000000000000000
        serverless:
          title: Serverless capacity mode. Cannot be changed, and does not support multiple regions.
          $md.immutable: true
          type: boolean
          default: false
      dependencies:
        consistency_level:
          oneOf:
            - properties:
                consistency_level:
                  const: BoundedStaleness
                max_interval_in_seconds:
                  title: Max interval in seconds
                  description: The amount of staleness tolerated (in seconds). This value is only usable for Bounded Staleness consistency. Minimum of 300, max of 86400.
                  type: integer
                  default: 300
                  minimum: 300
                  maximum: 86400
                max_staleness_prefix:
                  title: Max staleness prefix
                  description: The number of stale requests tolerated. This value is only usable for Bounded Staleness consistency. Minimum of 100000, max of 2147483647.
                  type: integer
                  default: 100000
                  minimum: 100000
                  maximum: 2147483647
              required:
                - max_interval_in_seconds
                - max_staleness_prefix
            - properties:
                consistency_level:
                  enum:
                    - Strong
                    - Eventual
    geo_redundancy:
      title: Geo-Redundancy
      type: object
      properties:
        multi_region_writes:
          title: Enable multi-region writes. This setting is not supported with strong consistency or serverless mode.
          type: boolean
          default: false
        automatic_failover:
          title: Enable automatic failover
          type: boolean
          default: false
        additional_regions:
          title: Additional failover regions
          type: array
          default: []
          items:
            type: object
            title: Failover region
            description: Configuration of a failover region region
            required:
              - location
              - failover_priority
            properties:
              location:
                title: Location
                description: The Azure region to host replicated data.
                type: string
                oneOf:
                  - title: North Central US
                    const: northcentralus
                  - title: South Central US
                    const: southcentralus
                  - title: East US
                    const: eastus
                  - title: East US 2
                    const: eastus2
                  - title: West US
                    const: westus
                  - title: West US 3
                    const: westus3
              failover_priority:
                title: Failover priority
                description: The failover priority of the region. The lower the value, the higher the priority is. Minimum value is 2, maximum value is 100.
                type: integer
                minimum: 2
                maximum: 100
    backups:
      title: Backups
      description: Enable and configure backups for your database. Backup type cannot be changed after provisioning.
      type: object
      properties:
        backup_type:
          title: Backup type
          description: The backup type to use for the Cosmos DB account. This cannot be changed after it is set.
          $md.immutable: true
          type: string
          default: None
          enum:
            - None
            - Continuous
            - Periodic
      dependencies:
        backup_type:
          oneOf:
            - properties:
                backup_type:
                  const: Periodic
                interval:
                  title: Interval between backups
                  description: The interval between backups in minutes. Minimum of 60, maximum of 1440.
                  type: integer
                  minimum: 60
                  maximum: 1440
                retention:
                  title: Retention period for backups
                  description: The number of hours to keep backups. Minimum of 8, maximum of 720.
                  type: integer
                  minimum: 8
                  maximum: 720
                redundancy:
                  title: Backup storage redundancy
                  description: The backup storage redundancy to use for the Cosmos DB account.
                  type: string
                  oneOf:
                    - title: Geo-redundant backup storage
                      const: Geo
                    - title: Local-redundant backup storage
                      const: Local
              required:
                - interval
                - retention
                - redundancy
            - properties:
                backup_type:
                  enum:
                    - None
                    - Continuous
    monitoring:
      type: object
      title: Monitoring
      properties:
        mode:
          title: Alarm Mode
          description: Enable and customize Function App metric alarms.
          type: string
          default: AUTOMATED
          oneOf:
            - const: AUTOMATED
              title: Automated
            - const: CUSTOM
              title: Custom
            - const: DISABLED
              title: Disabled
      dependencies:
        mode:
          oneOf:
            - properties:
                mode:
                  const: AUTOMATED
            - properties:
                mode:
                  const: DISABLED
            - properties:
                mode:
                  const: CUSTOM
                alarms:
                  type: object
                  title: Alarms
                  properties:
                    normalized_ru_consumption_metric_alert:
                      title: RU Consumption
                      type: object
                      <<: *monitor_alarm_metric
                    server_latency_metric_alert:
                      title: Server latency
                      type: object
                      <<: *monitor_alarm_metric

connections:
  required:
    - azure_service_principal
    - azure_virtual_network
  properties:
    azure_service_principal:
      $ref: massdriver/azure-service-principal
    azure_virtual_network:
      $ref: massdriver/azure-virtual-network

artifacts:
  required:
    - mongo_authentication
  properties:
    mongo_authentication:
      $ref: massdriver/mongo-authentication

ui:
  ui:order:
    - database
    - geo_redundancy
    - backups
    - monitoring
    - "*"
  database:
    ui:order:
      - mongo_server_version
      - cidr
      - consistency_level
      - max_interval_in_seconds
      - max_staleness_prefix
      - total_throughput_limit
      - serverless
      - "*"
  geo_redundancy:
    ui:order:
      - multi_region_writes
      - automatic_failover
      - additional_regions
      - "*"
    additional_regions:
      ui:order:
        - location
        - failover_priority
        - "*"
  backups:
    ui:order:
      - backup_type
      - interval
      - retention
      - redundancy
      - "*"
  monitoring:
    ui:order:
      - mode
      - alarms
      - '*'
    alarms:
      ui:order:
        - normalized_ru_consumption_metric_alert
        - server_latency_metric_alert
        - '*'
      normalized_ru_consumption_metric_alert: &monitor_alarm_metric_ui
        ui:order:
          - severity
          - operator
          - aggregation
          - frequency
          - window_size
          - threshold
          - '*'
      server_latency_metric_alert:
        <<: *monitor_alarm_metric_ui
